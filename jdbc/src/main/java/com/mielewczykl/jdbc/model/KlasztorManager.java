package com.mielewczykl.jdbc.model;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class KlasztorManager {

    private Connection connection;

    private String url = "jdbc:hsqldb:hsql://localhost/workdb";

    private String createTablePerson = "CREATE TABLE Person(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), yob integer)";

    private PreparedStatement addPersonStmt;
    private PreparedStatement deleteAllPersonsStmt;
    private PreparedStatement getAllPersonsStmt;

    public KlasztorManager()
    {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection db = DriverManager.getConnection("jdbc:sqlserver://eos.inf.ug.edu.pl;databaseName=lmielewczyk;trustServerCertificate=true", "lmielewczyk", "224701");
            Statement st = db.createStatement();
            st.execute("INSERT INTO religia(religia, opis) VALUES ('string', 'string');");
            st.execute("INSERT INTO klasztor(id_religia, nazwa, kontakt) VALUES (1, 'string', 'string');");
            st.close();
            db.close();
        } catch (SQLException sqle) {
        } catch (ClassNotFoundException cnfe) {
        }
    }

    public Connection getConnection() {
        return connection;
    }

    public void clearPersons() {
        try {
            deleteAllPersonsStmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public int addPerson(Klasztor person) {
        int count = 0;
        try {
            addPersonStmt.setString(1, person.getName());
            addPersonStmt.setInt(2, person.getYob());

            count = addPersonStmt.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return count;
    }

    public List<Klasztor> getAllPersons() {
        List<Klasztor> persons = new ArrayList<Klasztor>();

        try {
            ResultSet rs = getAllPersonsStmt.executeQuery();

            while (rs.next()) {
                Klasztor p = new Klasztor();
                p.setId(rs.getInt("id"));
                p.setName(rs.getString("name"));
                p.setYob(rs.getInt("yob"));
                persons.add(p);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return persons;
    }
}